{"version":3,"sources":["util.js","App.js","serviceWorker.js","index.js"],"names":["getColors","num","Block","blockStyle","style","background","color","height","width","margin","display","justifyContent","alignItems","fontSize","fontWeight","newGameButton","padding","borderRadius","marginLeft","marginBottom","cursor","tryAgainButton","marginTop","gameOverOverlay","position","left","top","App","useState","data","setData","gameOver","setGameOver","addNumber","newGrid","added","gridFull","attempts","rand1","Math","floor","random","rand2","checkIfGameOver","alert","swipeLeft","dummy","console","log","oldGrid","newArray","cloneDeep","i","b","slow","fast","JSON","stringify","swipeRight","oldData","length","swipeDown","parse","swipeUp","checker","checker2","table","checker3","checker4","resetGame","emptyGrid","useEffect","initialize","event","handler","passive","window","addEventListener","removeEventListener","useEvent","keyCode","className","flex","onClick","fontFamily","onSwipeDown","onSwipeLeft","onSwipeRight","onSwipeUp","overflowY","map","row","oneIndex","key","digit","index","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.7697172e.chunk.js","sourcesContent":["import { useEffect } from \"react\";\n\nexport const useEvent = (event, handler, passive = false) => {\n  useEffect(() => {\n    // initiate the event handler\n    window.addEventListener(event, handler, passive);\n\n    // this will clean up the event every time the component is re-rendered\n    return function cleanup() {\n      window.removeEventListener(event, handler);\n    };\n  });\n};\n\nexport const getColors = (num) => {\n  switch (num) {\n    case 2:\n      return \"#EBDCD0\";\n    case 4:\n      return \"#E9DBBA\";\n    case 8:\n      return \"#E9A067\";\n    case 16:\n      return \"#F08151\";\n    case 32:\n      return \"#F2654F\";\n    case 64:\n      return \"#F1462C\";\n    case 128:\n      return \"#E7C65E\";\n    case 256:\n      return \"#E8C350\";\n    case 512:\n      return \"#E8BE40\";\n    case 1024:\n      return \"#E8BB31\";\n    case 2048:\n      return \"#E7B723\";\n    default:\n      return \"#C2B3A3\";\n  }\n};","import React, { useState, useEffect } from \"react\";\nimport cloneDeep from \"lodash.clonedeep\";\nimport { useEvent, getColors } from \"./util\";\nimport Swipe from \"react-easy-swipe\";\n\nfunction App() {\n  const UP_ARROW = 38;\n  const DOWN_ARROW = 40;\n  const LEFT_ARROW = 37;\n  const RIGHT_ARROW = 39;\n\n  const [data, setData] = useState([\n    [ 0,  0 , 0 , 0  ],\n    [ 0,  0 , 0 , 0  ],\n    [ 0,  0 , 0 , 0  ],\n    [ 0,  0 , 0 , 0  ],\n  ]);\n\n  const [gameOver, setGameOver] = useState(false);\n\n  // Initialize\n  const initialize = () => {\n    // console.log(\"CALLING INITIALIZE\");\n\n    let newGrid = cloneDeep(data);\n    console.log(newGrid);\n\n    addNumber(newGrid);\n    console.table(newGrid);\n    addNumber(newGrid);\n    console.table(newGrid);\n    setData(newGrid);\n  };\n\n  // AddNumber - Add an item\n  const addNumber = (newGrid) => {\n    let added = false;\n    let gridFull = false;\n    let attempts = 0;\n    while (!added) {\n      if (gridFull) {\n        break;\n      }\n\n      let rand1 = Math.floor(Math.random() * 4);\n      let rand2 = Math.floor(Math.random() * 4);\n      attempts++;\n      if (newGrid[rand1][rand2] === 0) {\n        newGrid[rand1][rand2] = Math.random() > 0.5 ? 2 : 4;\n        added = true;\n      }\n      if (attempts > 50) {\n        gridFull = true;\n        let gameOverr = checkIfGameOver();\n        if (gameOverr) {\n          alert(\"game over\");\n          // setGameOver(true);\n        }\n        // setGameOver(true);\n      }\n    }\n  };\n  // Swipe Left\n  const swipeLeft = (dummy) => {\n    console.log(\"swipe left\");\n    let oldGrid = data;\n    let newArray = cloneDeep(data);\n\n    for (let i = 0; i < 4; i++) {\n      let b = newArray[i];\n      let slow = 0;\n      let fast = 1;\n      while (slow < 4) {\n        if (fast === 4) {\n          fast = slow + 1;\n          slow++;\n          continue;\n        }\n        if (b[slow] === 0 && b[fast] === 0) {\n          fast++;\n        } else if (b[slow] === 0 && b[fast] !== 0) {\n          b[slow] = b[fast];\n          b[fast] = 0;\n          fast++;\n        } else if (b[slow] !== 0 && b[fast] === 0) {\n          fast++;\n        } else if (b[slow] !== 0 && b[fast] !== 0) {\n          if (b[slow] === b[fast]) {\n            b[slow] = b[slow] + b[fast];\n            b[fast] = 0;\n            fast = slow + 1;\n            slow++;\n          } else {\n            slow++;\n            fast = slow + 1;\n          }\n        }\n      }\n    }\n    if (JSON.stringify(oldGrid) !== JSON.stringify(newArray)) {\n      addNumber(newArray);\n    }\n    if (dummy) {\n      return newArray;\n    } else {\n      setData(newArray);\n    }\n  };\n\n  const swipeRight = (dummy) => {\n    console.log(\"swipe right\");\n    let oldData = data;\n    let newArray = cloneDeep(data);\n\n    for (let i = 3; i >= 0; i--) {\n      let b = newArray[i];\n      let slow = b.length - 1;\n      let fast = slow - 1;\n      while (slow > 0) {\n        if (fast === -1) {\n          fast = slow - 1;\n          slow--;\n          continue;\n        }\n        if (b[slow] === 0 && b[fast] === 0) {\n          fast--;\n        } else if (b[slow] === 0 && b[fast] !== 0) {\n          b[slow] = b[fast];\n          b[fast] = 0;\n          fast--;\n        } else if (b[slow] !== 0 && b[fast] === 0) {\n          fast--;\n        } else if (b[slow] !== 0 && b[fast] !== 0) {\n          if (b[slow] === b[fast]) {\n            b[slow] = b[slow] + b[fast];\n            b[fast] = 0;\n            fast = slow - 1;\n            slow--;\n          } else {\n            slow--;\n            fast = slow - 1;\n          }\n        }\n      }\n    }\n    if (JSON.stringify(newArray) !== JSON.stringify(oldData)) {\n      addNumber(newArray);\n    }\n    if (dummy) {\n      return newArray;\n    } else {\n      setData(newArray);\n    }\n  };\n\n  const swipeDown = (dummy) => {\n    console.log(\"swipe down\");\n    console.log(data);\n    let b = cloneDeep(data);\n    let oldData = JSON.parse(JSON.stringify(data));\n    for (let i =3; i >= 0; i--) {\n      let slow = b.length - 1;\n      let fast = slow - 1;\n      while (slow > 0) {\n        if (fast === -1) {\n          fast = slow - 1;\n          slow--;\n          continue;\n        }\n        if (b[slow][i] === 0 && b[fast][i] === 0) {\n          fast--;\n        } else if (b[slow][i] === 0 && b[fast][i] !== 0) {\n          b[slow][i] = b[fast][i];\n          b[fast][i] = 0;\n          fast--;\n        } else if (b[slow][i] !== 0 && b[fast][i] === 0) {\n          fast--;\n        } else if (b[slow][i] !== 0 && b[fast][i] !== 0) {\n          if (b[slow][i] === b[fast][i]) {\n            b[slow][i] = b[slow][i] + b[fast][i];\n            b[fast][i] = 0;\n            fast = slow - 1;\n            slow--;\n          } else {\n            slow--;\n            fast = slow - 1;\n          }\n        }\n      }\n    }\n    if (JSON.stringify(b) !== JSON.stringify(oldData)) {\n      addNumber(b);\n    }\n    if (dummy) {\n      return b;\n    } else {\n      setData(b);\n    }\n  };\n\n  const swipeUp = (dummy) => {\n    console.log(\"swipe up\");\n    let b = cloneDeep(data);\n    let oldData = JSON.parse(JSON.stringify(data));\n    for (let i = 0; i < 4; i++) {\n      let slow = 0;\n      let fast = 1;\n      while (slow < 4) {\n        if (fast === 4) {\n          fast = slow + 1;\n          slow++;\n          continue;\n        }\n        if (b[slow][i] === 0 && b[fast][i] === 0) {\n          fast++;\n        } else if (b[slow][i] === 0 && b[fast][i] !== 0) {\n          b[slow][i] = b[fast][i];\n          b[fast][i] = 0;\n          fast++;\n        } else if (b[slow][i] !== 0 && b[fast][i] === 0) {\n          fast++;\n        } else if (b[slow][i] !== 0 && b[fast][i] !== 0) {\n          if (b[slow][i] === b[fast][i]) {\n            b[slow][i] = b[slow][i] + b[fast][i];\n            b[fast][i] = 0;\n            fast = slow + 1;\n            slow++;\n          } else {\n            slow++;\n            fast = slow + 1;\n          }\n        }\n      }\n    }\n    if (JSON.stringify(oldData) !== JSON.stringify(b)) {\n      addNumber(b);\n    }\n    if (dummy) {\n      return b;\n    } else {\n      setData(b);\n    }\n  };\n\n  // Check Gameover\n  const checkIfGameOver = () => {\n    console.log(\"CHECKING GAME OVER\");\n    // let original = cloneDeep(data);\n    let checker = swipeLeft(true);\n\n    if (JSON.stringify(data) !== JSON.stringify(checker)) {\n      return false;\n    }\n\n    let checker2 = swipeDown(true);\n    console.log(\"CHECKER DOWN\");\n    console.table(data);\n    console.table(checker2);\n    if (JSON.stringify(data) !== JSON.stringify(checker2)) {\n      return false;\n    }\n\n    let checker3 = swipeRight(true);\n\n    if (JSON.stringify(data) !== JSON.stringify(checker3)) {\n      return false;\n    }\n\n    let checker4 = swipeUp(true);\n\n    if (JSON.stringify(data) !== JSON.stringify(checker4)) {\n      return false;\n    }\n\n    return true;\n  };\n  // Reset\n  const resetGame = () => {\n    setGameOver(false);\n    const emptyGrid = [\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n    ];\n\n    addNumber(emptyGrid);\n    addNumber(emptyGrid);\n    setData(emptyGrid);\n  };\n\n  const handleKeyDown = (event) => {\n    if (gameOver) {\n      return;\n    }\n    switch (event.keyCode) {\n      case UP_ARROW:\n        // alert(\"up\");\n        // console.table(data);\n        swipeUp();\n        // console.table(data);\n        break;\n      case DOWN_ARROW:\n        // console.table(data);\n        swipeDown();\n        // console.table(data);\n        break;\n      case LEFT_ARROW:\n        // console.table(data);\n        swipeLeft();\n        // console.table(data);\n        break;\n      case RIGHT_ARROW:\n        // console.table(data);\n        swipeRight();\n        // console.table(data);\n        break;\n      default:\n        break;\n    }\n\n    let gameOverr = checkIfGameOver();\n    if (gameOverr) {\n      setGameOver(true);\n    }\n  };\n\n  useEffect(() => {\n    initialize();\n    // eslint-disable-next-line\n  }, []);\n\n  // This is a custom function\n  useEvent(\"keydown\", handleKeyDown);\n\n  return (\n    <div className=\"App\">\n      <div\n        style={{\n          margin: \"auto\",\n          marginTop: 30,\n        }}\n        className=\"text-center\"\n      >\n        <div style={{ display: \"flex\" }}>\n          {/* <div\n            style={{\n              fontFamily: \"sans-serif\",\n              flex: 1,\n              fontWeight: \"700\",\n              fontSize: 60,\n              color: \"#776e65\",\n            }}\n            >\n            2048\n          </div> */}\n          <div\n            style={{\n              flex: 1,\n              marginTop: \"auto\",\n            }}\n          >\n            <div onClick={resetGame} style={style.newGameButton} className=\"btn d-flex justify-content-center\">\n                NEW GAME\n              </div>\n            \n          </div>\n        </div>\n        <div\n          style={{\n            background: \"#AD9D8F\",\n            width: \"max-content\",\n            height: \"max-content\",\n            margin: \"auto\",\n            padding: 5,\n            borderRadius: 5,\n            marginTop: 10,\n            position: \"relative\",\n          }}\n        >\n          {gameOver && (\n            <div style={style.gameOverOverlay}>\n              <div>\n                <div\n                  style={{\n                    fontSize: 30,\n                    fontFamily: \"sans-serif\",\n                    fontWeight: \"900\",\n                    color: \"#776E65\",\n                  }}\n                >\n                  Game Over\n                </div>\n                <div>\n                  <div\n                    style={{\n                      flex: 1,\n                      marginTop: \"auto\",\n                    }}\n                  >\n                    <div onClick={resetGame} style={style.tryAgainButton}>\n                      Try Again\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          )}\n          <Swipe\n            onSwipeDown={() => {\n              swipeDown();\n            }}\n            onSwipeLeft={() => swipeLeft()}\n            onSwipeRight={() => swipeRight()}\n            onSwipeUp={() => swipeUp()}\n            style={{ overflowY: \"hidden\" }}\n          >\n            {data.map((row, oneIndex) => {\n              return (\n                <div style={{ display: \"flex\" }} key={oneIndex}>\n                  {row.map((digit, index) => (\n                    <Block num={digit} key={index} />\n                  ))}\n                </div>\n              );\n            })}\n          </Swipe>\n        </div>\n\n       \n      </div>\n    </div>\n  );\n}\n\nconst Block = ({ num }) => {\n  const { blockStyle } = style;\n\n  return (\n    <div\n      style={{\n        ...blockStyle,\n        background: getColors(num),\n        color: num === 2 || num === 4 ? \"#645B52\" : \"#F7F4EF\",\n      }}\n    >\n      {num !== 0 ? num : \"\"}\n    </div>\n  );\n};\n\nconst style = {\n  blockStyle: {\n    height: 100,\n    width: 120,\n    background: \"lightgray\",\n    margin: 3,\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    fontSize: 45,\n    fontWeight: \"800\",\n    color: \"white\",\n  },\n  newGameButton: {\n    \n    padding: 10,\n    background: \"#846F5B\",\n    color: \"#F8F5F0\",\n    width: 200,\n    borderRadius: 7,\n    fontWeight: \"900\",\n    marginLeft: \"36rem\",\n    marginBottom: \"auto\",\n    cursor: \"pointer\",\n  },\n  tryAgainButton: {\n    padding: 10,\n    background: \"#846F5B\",\n    color: \"#F8F5F0\",\n    width: 80,\n    borderRadius: 7,\n    fontWeight: \"900\",\n    cursor: \"pointer\",\n    margin: \"auto\",\n    marginTop: 20,\n  },\n  gameOverOverlay: {\n    position: \"absolute\",\n    height: \"100%\",\n    width: \"100%\",\n    left: 0,\n    top: 0,\n    borderRadius: 5,\n    background: \"rgba(238,228,218,.5)\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}